{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/notification/notification.service\";\nimport * as i4 from \"src/app/services/api/api.service\";\nexport let EditAddressComponent = /*#__PURE__*/(() => {\n  class EditAddressComponent {\n    constructor(dialogref, fb, notify, api_service, data) {\n      this.dialogref = dialogref;\n      this.fb = fb;\n      this.notify = notify;\n      this.api_service = api_service;\n      this.data = data;\n      this.form = FormGroup;\n      this.isCountryInputDisabled = true;\n      this.addressData = {\n        addressId: 0,\n        userId: 0,\n        country: '',\n        fullName: '',\n        pinCode: 0,\n        houseNumber: '',\n        area: '',\n        landmark: '',\n        city: '',\n        state: ''\n      };\n      this.error = \"\";\n      console.log(data);\n    }\n    closeDialog() {\n      this.dialogref.close();\n    }\n    ngOnInit() {\n      this.addressData = {\n        addressId: 0,\n        userId: 0,\n        country: '',\n        fullName: '',\n        pinCode: 0,\n        houseNumber: '',\n        area: '',\n        landmark: '',\n        city: '',\n        state: ''\n      };\n      this.form = this.fb.group({\n        fullname: [this.addressData.fullName, Validators.required],\n        house_no: [this.addressData.houseNumber, Validators.required],\n        area: [this.addressData.area, Validators.required],\n        city: [this.addressData.city, Validators.required],\n        pin_code: [this.addressData.pinCode, Validators.required],\n        landmark: [this.addressData.landmark, Validators.required],\n        state: [this.addressData.state, Validators.required]\n      });\n      console.log(this.data.addressId);\n      let address_resp = this.api_service.getAddressById(this.data.addressId);\n      address_resp.then(resp => {\n        this.addressData = resp;\n        this.form = this.fb.group({\n          fullname: [this.addressData.fullName, Validators.required],\n          house_no: [this.addressData.houseNumber, Validators.required],\n          area: [this.addressData.area, Validators.required],\n          city: [this.addressData.city, Validators.required],\n          pin_code: [this.addressData.pinCode, Validators.required],\n          landmark: [this.addressData.landmark, Validators.required],\n          state: [this.addressData.state, Validators.required]\n        });\n      });\n    }\n    onSubmit() {\n      this.error = \"\";\n      if (this.form.get('fullname').hasError('required')) {\n        this.error = \"Please Fill All Fields\";\n      } else if (this.form.get('house_no').hasError('required')) {\n        this.error = \"Please Fill All Fields\";\n      } else if (this.form.get('area').hasError('required')) {\n        this.error = \"Please Fill All Fields\";\n      } else if (this.form.get('city').hasError('required')) {\n        this.error = \"Please Fill All Fields\";\n      } else if (this.form.get('pin_code').hasError('required')) {\n        this.error = \"Please Fill All Fields\";\n      } else if (this.form.get('landmark').hasError('required')) {\n        this.error = \"Please Fill All Fields\";\n      } else if (this.form.get('state').hasError('required')) {\n        this.error = \"Please Fill All Fields\";\n      } else {\n        const userData = {\n          addressId: this.data.addressId,\n          fullName: this.form.get('fullname').value,\n          houseNumber: this.form.get('house_no').value,\n          area: this.form.get('area').value,\n          city: this.form.get('city').value,\n          pinCode: this.form.get('pin_code').value,\n          landmark: this.form.get('landmark').value,\n          state: this.form.get('state').value,\n          country: \"India\"\n        };\n        console.log(userData);\n        let resp = this.api_service.updateAddress(userData);\n        resp.then(response => {\n          if (response.message.includes(\"success\")) {\n            this.dialogref.close();\n            this.notify.proccessSuccessfull(\"Address Updated Successfully\");\n            setTimeout(() => {\n              location.reload();\n            }, 2000);\n          }\n        });\n      }\n    }\n    static #_ = this.ɵfac = function EditAddressComponent_Factory(t) {\n      return new (t || EditAddressComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i4.ApiService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditAddressComponent,\n      selectors: [[\"app-edit-address\"]],\n      decls: 19,\n      vars: 10,\n      consts: [[1, \"panel\"], [1, \"close-dialog\", 3, \"click\"], [1, \"fa-solid\", \"fa-xmark\", \"fa-lg\"], [1, \"text-center\", \"mt-3\"], [1, \"text-danger\", \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"value\", \"Country: India\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"fullname\", \"placeholder\", \"Full Name*\", 1, \"form-control\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"house_no\", \"placeholder\", \"Flat, House No., Company, Apartment\", 1, \"form-control\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"area\", \"placeholder\", \"Area, Street, Sector, Village\", 1, \"form-control\", 3, \"value\"], [1, \"input-group\", \"d-flex-city-pin\"], [\"type\", \"text\", \"formControlName\", \"city\", \"placeholder\", \"City\", 1, \"input\", \"input-city-prefix\", 3, \"value\"], [\"type\", \"number\", \"formControlName\", \"pin_code\", \"placeholder\", \"Pin Code\", 1, \"input\", \"input-pincode-postfix\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"landmark\", \"placeholder\", \"Landmark\", 1, \"form-control\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"state\", \"placeholder\", \"State\", 1, \"form-control\", 3, \"value\"], [\"type\", \"submit\", 1, \"btn\", \"btn-danger\", \"btn-submit\"]],\n      template: function EditAddressComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵlistener(\"click\", function EditAddressComponent_Template_div_click_1_listener() {\n            return ctx.closeDialog();\n          });\n          i0.ɵɵelement(2, \"i\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"h1\", 3);\n          i0.ɵɵtext(4, \"Edit Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 4);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function EditAddressComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelement(8, \"input\", 6)(9, \"input\", 7)(10, \"input\", 8)(11, \"input\", 9);\n          i0.ɵɵelementStart(12, \"div\", 10);\n          i0.ɵɵelement(13, \"input\", 11)(14, \"input\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 13)(16, \"input\", 14);\n          i0.ɵɵelementStart(17, \"button\", 15);\n          i0.ɵɵtext(18, \"Submit\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵtextInterpolate(ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(1);\n          i0.ɵɵattribute(\"disabled\", ctx.isCountryInputDisabled ? true : null);\n          i0.ɵɵadvance(1);\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.addressData.fullName);\n          i0.ɵɵadvance(1);\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.addressData.houseNumber);\n          i0.ɵɵadvance(1);\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.addressData.area);\n          i0.ɵɵadvance(2);\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.addressData.city);\n          i0.ɵɵadvance(1);\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.addressData.pinCode);\n          i0.ɵɵadvance(1);\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.addressData.landmark);\n          i0.ɵɵadvance(1);\n          i0.ɵɵpropertyInterpolate(\"value\", ctx.addressData.state);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\".panel[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;font-family:Poppins;max-height:1000px;overflow-y:auto;width:546px;padding-top:10px;position:relative;padding-bottom:20px;overflow:scroll}.close-dialog[_ngcontent-%COMP%]{position:absolute;top:10px;right:10px;color:gray;cursor:pointer}.fa-x-mark[_ngcontent-%COMP%]{color:#504e4e}h1[_ngcontent-%COMP%]{font-size:40px!important;font-weight:700;margin-bottom:40px}.panel[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]{width:380px;height:45px;border:1px solid rgb(155,154,154);margin-bottom:10px}.error[_ngcontent-%COMP%]{font-size:14px;margin-top:2px;text-align:left;align-items:start;width:68%}.input[_ngcontent-%COMP%]{height:45px}.d-flex[_ngcontent-%COMP%]{justify-content:space-between}.radio[_ngcontent-%COMP%]{height:18px;margin-right:5px}.inner-first[_ngcontent-%COMP%]{color:#494949}.d-flex[_ngcontent-%COMP%]   a[_ngcontent-%COMP%], .inner-first[_ngcontent-%COMP%]{font-size:17px}a[_ngcontent-%COMP%]{text-decoration:none;color:#000}.btn[_ngcontent-%COMP%]{background-color:#da1212;width:380px;text-align:center;height:45px;font-size:16px;font-weight:600;margin-bottom:20px}.text-center[_ngcontent-%COMP%]{margin-top:50px;text-align:center;font-size:17px}.text-center[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#f03838;text-decoration:underline}.black_link[_ngcontent-%COMP%]{color:#000;font-size:17px;font-weight:500}a[_ngcontent-%COMP%]{cursor:pointer}.d-grid[_ngcontent-%COMP%]{display:inline-block}.input-group[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-bottom:20px}.input-phone-prefix[_ngcontent-%COMP%]{padding-left:10px;width:60px!important}.input-phone-postfix[_ngcontent-%COMP%]{width:315px!important;font-size:16px}.input-phone-prefix[_ngcontent-%COMP%], .input-phone-postfix[_ngcontent-%COMP%]{padding-left:10px;border:1px solid #A4A4A4;border-radius:5px}.d-flex-city-pin[_ngcontent-%COMP%]{width:380px;display:flex;flex-direction:row;justify-content:space-between}.input-city-prefix[_ngcontent-%COMP%], .input-pincode-postfix[_ngcontent-%COMP%]{width:180px!important}.input-city-prefix[_ngcontent-%COMP%], .input-pincode-postfix[_ngcontent-%COMP%]{padding-left:10px;border:1px solid #A4A4A4;border-radius:8px!important}.input-phone-prefix[_ngcontent-%COMP%]:focus, .input-phone-postfix[_ngcontent-%COMP%]:focus, .input-city-prefix[_ngcontent-%COMP%]:focus, .input-pincode-postfix[_ngcontent-%COMP%]:focus{outline:none}@media screen and (max-width:500px){h1[_ngcontent-%COMP%]{font-size:22px!important;margin-bottom:0!important}.panel[_ngcontent-%COMP%]{width:290px}.panel[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%], .btn[_ngcontent-%COMP%]{width:210px}.text-center[_ngcontent-%COMP%]{font-size:13px}.input-phone-prefix[_ngcontent-%COMP%]{width:40px!important}.input-group[_ngcontent-%COMP%]   .input-phone-postfix[_ngcontent-%COMP%]{margin-left:1px!important;width:170px!important}.d-flex-city-pin[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;width:100%}.input-city-prefix[_ngcontent-%COMP%], .input-pincode-postfix[_ngcontent-%COMP%]{width:104px!important}}@media screen and (min-width:501px) and (max-width:670px){.panel[_ngcontent-%COMP%]{width:400px}.panel[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]{width:300px}.input-phone-prefix[_ngcontent-%COMP%]{padding-left:10px;width:40px!important}.input-phone-postfix[_ngcontent-%COMP%]{width:260px!important;font-size:16px}.d-flex[_ngcontent-%COMP%]   .inner-first[_ngcontent-%COMP%], .d-flex[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{font-size:14px}.btn[_ngcontent-%COMP%]{width:300px}.d-flex-city-pin[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center}.input-city-prefix[_ngcontent-%COMP%], .input-pincode-postfix[_ngcontent-%COMP%]{width:149px!important}}\"]\n    });\n  }\n  return EditAddressComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}